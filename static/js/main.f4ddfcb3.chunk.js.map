{"version":3,"sources":["keyboard.js","Message.js","TypedInput.js","App.js","registerServiceWorker.js","index.js","audio.js"],"names":["keyboard","listeners","defaultStyle","transition","concat","opacity","transitionStyles","entering","entered","Message","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inProp","_this2","setTimeout","setState","message","react_default","a","createElement","className","from","Transition_default","in","timeout","style","objectSpread","body","Component","TypedInput","_typeMessage","bind","assertThisInitialized","_interval","inputText","newProps","clearTimeout","_this3","sendMessage","_this$state","newText","charAt","length","Math","random","complete","cursor","App","_handleInput","_advanceScript","_sendMessage","messages","currentMessage","position","show","keyDownFn","keyList","arguments","undefined","push","document","addEventListener","fn","e","includes","code","makeKeyDownListener","capture","listen","forEach","listener","removeEventListener","key","audio","crash","newPosition","script","_this$state2","update","toConsumableArray","receiveMessage","_this$state3","messageDisplay","map","i","src_Message","src_TypedInput","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","src_App_0","getElementById","URL","process","origin","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","context","AudioContext","req","XMLHttpRequest","open","responseType","loaded","getSource","start","onload","decodeAudioData","buf","source","createBufferSource","buffer","connect","destination","send","module","exports"],"mappings":"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","file":"static/js/main.f4ddfcb3.chunk.js","sourcesContent":["const keyboard = [ 'KeyC', 'KeyS', 'Space', 'KeyR' ];\n\nfunction makeKeyDownListener(keyList, fn) {\n  return (e) => {\n    if (!keyList.includes(e.code)) {\n      return;\n    }\n\n    fn(e.code);\n  };\n}\n\nconst listeners = [];\n\nexport function listen(keyDownFn, keyList = keyboard) {\n  listeners.push(document.addEventListener('keydown', makeKeyDownListener(keyList, keyDownFn), { capture: true }));\n}\n\nexport function stop() {\n  listeners.forEach((listener) => document.removeEventListener('keydown', listener));\n  listeners.length = 0;\n}\n","import React, { Component } from 'react';\nimport Transition from 'react-transition-group/Transition';\n\nconst duration = 150;\n\nconst defaultStyle = {\n  transition: `opacity ${duration}ms ease-in`,\n  opacity: 0,\n};\n\nconst transitionStyles = {\n  entering: { opacity: 1 },\n  entered: { opacity: 1 },\n};\n\nclass Message extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { inProp: false };\n  }\n\n  componentDidMount() {\n    setTimeout(() => { this.setState({ inProp: true }); }, 10);\n  }\n\n  render() {\n    const { message } = this.props;\n    const { inProp } = this.state;\n\n    return (\n      <div className={ `messagecontainer ${ message.from } `}>\n        <Transition in={ inProp } timeout={ duration }>\n          {(state) => (\n            <span\n              style={{ ...defaultStyle, ...transitionStyles[ state ] }}\n              className={ `message ${ message.from } `}\n            >{ message.body }</span>\n          )}\n        </Transition>\n      </div>\n    );\n  }\n}\n\nexport default Message;\n","import React, { Component } from 'react';\n\nclass TypedInput extends Component {\n  constructor(props) {\n    super(props);\n\n    this._typeMessage = this._typeMessage.bind(this);\n    this._interval = null;\n\n    this.state = {\n      message: props.message || null,\n      inputText: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.message) {\n      this._typeMessage();\n    }\n  }\n\n  componentWillReceiveProps(newProps) {\n\n    if (this._interval) {\n      clearTimeout(this._interval);\n      this._interval = null;\n    }\n\n    this.setState({\n      message: newProps.message,\n      inputText: ''\n    },\n    () => {\n      if (newProps.message) {\n        this._typeMessage();\n      }\n    });\n  }\n\n  _typeMessage() {\n    const { sendMessage } = this.props;\n    const { message, inputText } = this.state;\n\n    if (message.body === inputText) {\n      if (message.complete) {\n        setTimeout(() => {\n          this.setState({\n            message: null,\n            inputText: ''\n          },\n          () => sendMessage(message));\n        }, 150);\n      }\n\n      return;\n    }\n\n    const newText = `${ inputText }${ message.body.charAt(inputText.length) }`;\n\n    this.setState({\n      inputText: newText\n    },\n    () => {\n      this._interval = setTimeout(this._typeMessage, Math.random() * 60 + 40);\n    });\n  }\n\n  render() {\n    const { inputText } = this.state;\n\n    const cursor = inputText.length ? (<span className='blinker'></span>) : null;\n\n    return (\n      <div className='keyboard-input'>\n        <div className='typed-input'>{ inputText }{ cursor }</div>\n      </div>\n    );\n  }\n}\n\nexport default TypedInput\n","import React, { Component } from 'react';\nimport { listen, stop } from './keyboard';\nimport './App.css';\nimport script from './script.json';\nimport Message from './Message';\nimport TypedInput from './TypedInput';\nimport { audio } from './audio';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this._handleInput = this._handleInput.bind(this);\n    this._advanceScript = this._advanceScript.bind(this);\n    this._sendMessage = this._sendMessage.bind(this);\n\n    this.state = {\n      messages: [],\n      currentMessage: null,\n      position: -1,\n      show: false\n    };\n  }\n\n  componentWillMount() {\n    listen(this._handleInput);\n  }\n\n  componentWillUnmount() {\n    stop();\n  }\n\n  _handleInput(key) {\n    switch(key) {\n      case 'KeyC':\n        audio.crash();\n        return;\n\n      case 'KeyS':\n        return this.setState({\n          show: true\n        });\n\n      case 'KeyR':\n        return this.setState({\n          show: false,\n          currentMessage: null,\n          position: -1,\n          messages: []\n        });\n\n      case 'Space':\n        return this._advanceScript();\n\n      default:\n        // noop\n        return;\n    }\n  }\n\n\n  _advanceScript() {\n\n    const { show, position } = this.state;\n\n    if (!show) {\n      return;\n    }\n\n    const newPosition = position + 1;\n\n    if (newPosition >= script.length) {\n      // Prevent overflow\n      return;\n    }\n\n    const message = script[newPosition];\n\n    this.setState({\n      position: newPosition\n    }, () => {\n      if (message.from === 'me') {\n        return this.setState({\n          currentMessage: message\n        });\n      }\n\n      return this._sendMessage(message);\n    });\n  }\n\n\n  _sendMessage(message) {\n    const { messages, currentMessage } = this.state;\n\n    const newMessages = [ ...messages, message ];\n\n    const update = {\n      messages: newMessages\n    };\n\n    if (message === currentMessage) {\n      update.currentMessage = null;\n    }\n\n    if (message.from === 'me') {\n      audio.sendMessage();\n    } else {\n      audio.receiveMessage();\n    }\n\n    this.setState(update);\n  }\n\n  render() {\n    const { messages, currentMessage, show } = this.state;\n\n    const style = {\n      opacity: show ? 1 : 0\n    };\n\n    const messageDisplay = messages.map((message, i) => {\n      return (\n        <Message key={ i } message={ message } />\n      );\n    });\n\n    return (\n      <div className=\"container\" style={ style }>\n        <div className=\"header\">Kate</div>\n        <div className=\"messagewindow\">\n          <div className=\"messagelist\">\n            { messageDisplay }\n          </div>\n        </div>\n        <TypedInput message={ currentMessage } sendMessage={ this._sendMessage } />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n","const context = new AudioContext();\nconst req = new XMLHttpRequest();\nreq.open('GET', './sound.wav', true);\nreq.responseType = 'arraybuffer';\n\nlet loaded = false;\n\nlet getSource = () => ({ start: () => {}});\n\nreq.onload = () => {\n  context.decodeAudioData(req.response, (buf) => {\n    getSource = () => {\n      const source = context.createBufferSource();\n      source.buffer = buf;\n      source.connect(context.destination);\n      return source;\n    };\n\n    loaded = true;\n  }, (e) => {\n    console.error('Audio error!', e);\n  });\n};\n\nreq.send();\n\nconst audio = {\n  sendMessage: () => {\n    getSource().start(0, 6.619, 0.562);\n  },\n\n  receiveMessage: () => {\n    getSource().start(0, 7.653, 0.643);\n  },\n\n  crash: () => {\n    getSource().start(0, 0, 6.127);\n  }\n};\n\nmodule.exports = {\n  loaded,\n  audio\n};\n"],"sourceRoot":""}